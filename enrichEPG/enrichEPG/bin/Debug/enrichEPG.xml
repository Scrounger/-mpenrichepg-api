<?xml version="1.0"?>
<doc>
<assembly>
<name>
enrichEPG
</name>
</assembly>
<members>
<member name="M:enrichEPG.Database.MyMovingPictures.ListAll">
	<summary>
 Alle Serien aus TvSeriesDB laden, ORDER BY Title ASC
 </summary>
</member><member name="M:enrichEPG.Database.MyMovingPictures.Helper.GetMovies(System.String)">
	<summary>
 Daten aus table movie_Info laden
 </summary>
</member><member name="P:enrichEPG.Database.MyTvSeries.EpisodesList">
	<summary>
 Alle Episoden der Serie (ggf. aus TvSeriesDB laden)
 </summary>
</member><member name="P:enrichEPG.Database.MyTvSeries.Episode(System.Int32,System.Int32)">
	<summary>
 Episode der Serie (über SeriesNum und EpisodeNum)
 </summary>
</member><member name="P:enrichEPG.Database.MyTvSeries.Episode(System.String)">
	<summary>
 Episode der Serie suchen (über EpisodenName)
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.LoadAllEpisodes">
	<summary>
 FanArt Pfad aus TvSeriesDB laden, nicht vorhanden = string.empty
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.ListAll">
	<summary>
 Alle Serien aus TvSeriesDB laden, ORDER BY Title ASC
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.Retrieve(System.Int32)">
	<summary>
 einzelne Serie über idSeries aus TvSeriesDB laden
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.Search(System.String)">
	<summary>
 einzelne Serie suchen (levenshtein)
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.MyEpisode.ListAll(System.Int32)">
	<summary>
 Alle Episoden einer Serie laden (über idSeries)
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.MyEpisode.Retrieve(System.Int32,System.Int32,System.Int32)">
	<summary>
 Episode einer Serie laden (über idSeries, SeriesNum und EpisodeNum
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.MyEpisode.Retrieve(System.String)">
	<summary>
 Episode einer Serie laden (über idEpisode (CompositeID)) 
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.MyEpisode.Search(System.Int32,System.String)">
	<summary>
 Episode einer Serie suchen (über idSeries, EpisodeName (levenshtein))
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.Helper.GetSeries(System.String)">
	<summary>
 Daten aus table online_series laden
 </summary>
</member><member name="M:enrichEPG.Database.MyTvSeries.Helper.GetEpisodes(System.String)">
	<summary>
 Daten aus table online_episodes laden
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieEpisodeMapping.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32)">
	<summary> 
 Create an object from an existing row of data. This will be used by Gentle to 
 construct objects from retrieved rows. 
 </summary>
</member><member name="P:enrichEPG.TvDatabase.TVMovieEpisodeMapping.IsChanged">
	<summary>
 Indicates whether the entity is changed and requires saving or not.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieEpisodeMapping.ListAll">
	<summary>
 Static method to retrieve all instances that are stored in the database in one call
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieEpisodeMapping.Retrieve(System.String)">
	<summary>
 Retrieves an entity given it's id.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieEpisodeMapping.Retrieve(Gentle.Framework.Key)">
	<summary>
 Retrieves an entity given it's id, using Gentle.Framework.Key class.
 This allows retrieval based on multi-column keys.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieEpisodeMapping.Persist">
	<summary>
 Persists the entity if it was never persisted or was changed.
 </summary>
</member><member name="T:enrichEPG.TvDatabase.TVMovieEpisodeMapping">
	<summary>
 Instances of this class represent the properties and methods of a row in the table <b>TvMovieEpisodeMapping</b>.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TvMovieSeriesMapping.#ctor(System.Int32)">
	<summary> 
 Create an object from an existing row of data. This will be used by Gentle to 
 construct objects from retrieved rows. 
 </summary>
</member><member name="P:enrichEPG.TvDatabase.TvMovieSeriesMapping.IsChanged">
	<summary>
 Indicates whether the entity is changed and requires saving or not.
 </summary>
</member><member name="P:enrichEPG.TvDatabase.TvMovieSeriesMapping.idSeries">
	<summary>
 Property relating to database column idSeries
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TvMovieSeriesMapping.ListAll">
	<summary>
 Static method to retrieve all instances that are stored in the database in one call
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TvMovieSeriesMapping.Retrieve(System.Int32)">
	<summary>
 Retrieves an entity given it's id.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TvMovieSeriesMapping.Retrieve(Gentle.Framework.Key)">
	<summary>
 Retrieves an entity given it's id, using Gentle.Framework.Key class.
 This allows retrieval based on multi-column keys.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TvMovieSeriesMapping.Persist">
	<summary>
 Persists the entity if it was never persisted or was changed.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TvMovieSeriesMapping.ReferencedTvMovieProgramList">
	<summary>
 alle TvMovieProgram laden (Episoden im EPG)
 </summary>
</member><member name="T:enrichEPG.TvDatabase.TvMovieSeriesMapping">
	<summary>
 Instances of this class represent the properties and methods of a row in the table <b>TvMovieSeriesMapping</b>.
 </summary>
</member><member name="P:enrichEPG.My.Resources.Resources.ResourceManager">
	<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member><member name="P:enrichEPG.My.Resources.Resources.Culture">
	<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member><member name="T:enrichEPG.My.Resources.Resources">
	<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member><member name="P:enrichEPG.TvDatabase.TVMovieProgram.IsChanged">
	<summary>
 Indicates whether the entity is changed and requires saving or not.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieProgram.ListAll">
	<summary>
 Static method to retrieve all instances that are stored in the database in one call
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieProgram.Retrieve(System.Int32)">
	<summary>
 Retrieves an entity given it's id.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieProgram.Retrieve(Gentle.Framework.Key)">
	<summary>
 Retrieves an entity given it's id, using Gentle.Framework.Key class.
 This allows retrieval based on multi-column keys.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieProgram.Persist">
	<summary>
 Persists the entity if it was never persisted or was changed.
 </summary>
</member><member name="M:enrichEPG.TvDatabase.TVMovieProgram.ReferencedProgram">
	<summary>
	</summary>
</member><member name="T:enrichEPG.TvDatabase.TVMovieProgram">
	<summary>
 Instances of this class represent the properties and methods of a row in the table <b>TVMovieProgram</b>.
 </summary>
</member><member name="F:enrichEPG.MyLog.LogType.Debug">
	<summary>
 Debug logging
 </summary>
</member><member name="F:enrichEPG.MyLog.LogType.Info">
	<summary>
 normal logging
 </summary>
</member><member name="F:enrichEPG.MyLog.LogType.Warn">
	<summary>
 normal logging
 </summary>
</member><member name="F:enrichEPG.MyLog.LogType.Error">
	<summary>
 error logging
 </summary>
</member><member name="F:enrichEPG.MyLog._logDaysToKeep">
	<summary>
 Configure after how many days the log file shall be rotated when a new line is added
 </summary>
</member><member name="F:enrichEPG.MyLog._maxLogSizeMb">
	<summary>
 The maximum size of each log file in Megabytes
 </summary>
</member><member name="F:enrichEPG.MyLog._maxRepetitions">
	<summary>
 The maximum count of identic messages to be logged in a row
 </summary>
</member><member name="F:enrichEPG.MyLog._lastLogLines">
	<summary>
 The last log n lines to compare for repeated entries.
 </summary>
</member><member name="M:enrichEPG.MyLog.#ctor">
	<summary>
 Private singleton constructor . Do not allow any instance of this class.
 </summary>
</member><member name="M:enrichEPG.MyLog.#cctor">
	<summary>
 Static constructor
 </summary>
</member><member name="M:enrichEPG.MyLog.BackupLogFiles">
	<summary>
 Backups the log files.
 </summary>
</member><member name="M:enrichEPG.MyLog.Write(System.Exception)">
	<summary>
 Writes the specified exception to the log file
 </summary>
	<param name="ex">The ex.</param>
</member><member name="M:enrichEPG.MyLog.SafeString(System.String)">
	<summary>
 Replaces a password inside the string by stars
 </summary>
	<param name="Logtext">String to replace</param>
	<returns>String without password</returns>
</member><member name="M:enrichEPG.MyLog.Write(System.String,System.Object[])">
	<summary>
 Write a string to the logfile.
 </summary>
	<param name="format">The format of the string.</param>
	<param name="arg">An array containing the actual data of the string.</param>
</member><member name="M:enrichEPG.MyLog.Error(System.String,System.Object[])">
	<summary>
 Logs the message to the error file
 </summary>
	<param name="format">The format.</param>
	<param name="arg">The arg.</param>
</member><member name="M:enrichEPG.MyLog.Info(System.String,System.Object[])">
	<summary>
 Logs the message to the info file
 </summary>
	<param name="format">The format.</param>
	<param name="arg">The arg.</param>
</member><member name="M:enrichEPG.MyLog.Debug(System.String,System.Object[])">
	<summary>
 Logs the message to the debug file
 </summary>
	<param name="format">The format.</param>
	<param name="arg">The arg.</param>
</member><member name="M:enrichEPG.MyLog.WriteFile(System.String,System.Object[])">
	<summary>
 Logs the message to the info file
 </summary>
	<param name="format">The format.</param>
	<param name="arg">The arg.</param>
</member><member name="M:enrichEPG.MyLog.GetPathName">
	<summary>
 Returns the path the Application data location
</summary>
	<returns>Application data path of TvServer</returns>
</member><member name="M:enrichEPG.MyLog.CreateBlankFile(System.String)">
	<summary>
 Since Windows caches API calls to the FileSystem a simple FileInfo.CreationTime will be wrong when replacing files (even after refresh).
 Therefore we set it manually.
 </summary>
	<param name="aFileName"></param>
</member><member name="M:enrichEPG.MyLog.RotateLogs">
	<summary>
 Deletes .bak file, moves .log to .bak for every LogType
 </summary>
</member><member name="M:enrichEPG.MyLog.IsRepetition(System.IComparable{System.String})">
	<summary>
 Compares the cache's last log entries to check whether we have repeating lines that should not be logged
 </summary>
	<param name="aLogLine">A new log line</param>
	<returns>True if the cache only contains the exact lines as given by parameter</returns>
</member><member name="M:enrichEPG.MyLog.CheckLogPrepared(System.String)">
	<summary>
 Does pre-logging tasks - like check for rotation, oversize, etc
 </summary>
	<param name="aLogFileName">The file to be checked</param>
	<returns>False if logging must not go on</returns>
</member><member name="M:enrichEPG.MyLog.WriteToFile(enrichEPG.MyLog.LogType,System.String,System.Object[])">
	<summary>
 Writes the file.
 </summary>
	<param name="logType">the type of logging.</param>
	<param name="format">The format.</param>
	<param name="arg">The arg.</param>
</member><member name="T:enrichEPG.MyLog">
	<summary>
 An implementation of a log mechanism for the GUI library.
 </summary>
</member>
</members>
</doc>